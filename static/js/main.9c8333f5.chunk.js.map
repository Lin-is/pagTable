{"version":3,"sources":["Table.js","index.js"],"names":["Table","props","editUsers","oldUsers","users","results","editedUsers","forEach","user","index","newUser","fullName","gender","age","dob","email","city","location","country","push","updateRecordsToShow","page","start","pageSize","fin","info","setState","pages","Math","ceil","state","allUsers","length","currentPage","recordsToShow","slice","handleClick","e","currentTarget","value","num","handleSortClick","cellName","getAttribute","sorted","sortName","order","reverse","sort","a","b","handleChange","val","toLowerCase","records","lastSearch","startsWith","result","filter","obj","Object","keys","indexOf","buttons","prev","className","disabled","this","id","onClick","i","pagButton","pagDots","next","filledRaws","map","pagination","createPagination","for","type","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c8333f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Table.css';\r\nimport users from './users.json';\r\n\r\nclass Table extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pages: Math.ceil(this.editUsers().length/+this.props.pageSize),\r\n      currentPage: 1,\r\n      allUsers: this.editUsers(),\r\n      recordsToShow: this.editUsers().slice(0, +this.props.pageSize),\r\n      sorted: {\r\n        sortName: 'index',\r\n        order: 'asc'\r\n      },\r\n      lastSearch: ''\r\n    };\r\n  }\r\n\r\n  editUsers = () => {\r\n    const oldUsers = users.results;\r\n    const editedUsers = [];\r\n    oldUsers.forEach((user, index) => {\r\n      let newUser =  {\r\n        index: index + 1,\r\n        fullName: user['name']['first'] + ' ' + user['name']['last'],\r\n        gender: user.gender,\r\n        age: user.dob.age,\r\n        email: user.email,\r\n        city: user.location.city,\r\n        country: user.location.country,\r\n      }\r\n      editedUsers.push(newUser);\r\n    });\r\n    return editedUsers;\r\n  }\r\n\r\n  updateRecordsToShow = (page) => {\r\n    const start = (page - 1) * this.props.pageSize;\r\n    const fin = (page * this.props.pageSize > users.info.results) ? users.info.results : page * this.props.pageSize;\r\n\r\n    this.setState({\r\n      pages: Math.ceil(this.state.allUsers.length/+this.props.pageSize),\r\n      currentPage: page,\r\n      recordsToShow: this.state.allUsers.slice(start, fin),\r\n    });\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    const page = e.currentTarget.value;\r\n    let num = e.currentTarget.value;\r\n\r\n    if (page === \"prev\") {\r\n      if (this.state.currentPage > 1) {\r\n        num = this.state.currentPage - 1;\r\n      }\r\n    } else if (page === \"next\") {\r\n      if (this.state.currentPage < this.state.pages) {\r\n        num = +this.state.currentPage + 1;\r\n      }\r\n    }\r\n    this.updateRecordsToShow(+num);\r\n  }\r\n\r\n  handleSortClick = (e) => {\r\n    let users = this.state.allUsers;\r\n    let cellName = e.currentTarget.getAttribute(\"id\");\r\n\r\n    if (cellName === this.state.sorted.sortName) {\r\n      if (this.state.sorted.order === 'asc') {\r\n        this.setState({\r\n          allUsers: users.reverse(),\r\n          sorted: {\r\n            sortName: cellName,\r\n            order: 'desc',\r\n          }\r\n        });\r\n      } else if (this.state.sorted.order === 'desc') {\r\n        this.setState({\r\n          allUsers: users.sort((a, b) => a[\"index\"] > b[\"index\"] ? 1 : -1),\r\n          sorted: {\r\n            sortName: 'index',\r\n            order: 'asc'\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        allUsers: users.sort((a, b) => a[cellName] > b[cellName] ? 1 : -1),\r\n        sorted: {\r\n          sortName: cellName,\r\n          order: 'asc'\r\n        }\r\n      });\r\n    }\r\n    this.updateRecordsToShow(this.state.currentPage);\r\n  }\r\n\r\n  createPagination() {\r\n    let buttons = [];\r\n\r\n    const prev = <button className=\"pagButton prev\" disabled={this.state.currentPage === 1 ? true : false} value=\"prev\" key=\"prev\" id=\"pagButton-prev\" onClick={this.handleClick}>Prev</button>\r\n    buttons.push(prev);\r\n\r\n    if (this.state.pages <= 10) {\r\n      for (let i = 1; i <= this.state.pages; i++) {\r\n        const pagButton = <button className={(i === this.state.currentPage ? \"pagButton current\" : \"pagButton\")} value={i} id={\"pagButton-\" + i} key={i} onClick={this.handleClick}>{i}</button>\r\n        buttons.push(pagButton);\r\n      }\r\n    } else {\r\n      let pagButton = <button className={(1 === this.state.currentPage ? \"pagButton current\" : \"pagButton\")} value=\"1\" id=\"pagButton-1\" key=\"1\" onClick={this.handleClick}>1</button>\r\n      buttons.push(pagButton);\r\n      pagButton = <button className={(2 === this.state.currentPage ? \"pagButton current\" : \"pagButton\")} value=\"2\" id=\"pagButton-2\" key=\"2\" onClick={this.handleClick}>2</button>\r\n      buttons.push(pagButton);\r\n      let pagDots = <span className={this.state.currentPage <= 4 ? \"pagDots hidden\" : \"pagDots\"}>...</span>;\r\n      buttons.push(pagDots);\r\n\r\n      for (let i = 3; i <= this.state.pages - 2; i++) {\r\n        pagButton = <button \r\n          className={\r\n            (i === this.state.currentPage \r\n              ? \"pagButton current\" \r\n              : (i === (this.state.currentPage + 1) || (i === this.state.currentPage - 1)) \r\n                ? \"pagButton\" \r\n                : \"pagButton hidden\"\r\n            )} \r\n          value={i} \r\n          key={i} \r\n          onClick={this.handleClick}\r\n        >\r\n          {i}\r\n        </button>\r\n        buttons.push(pagButton);\r\n      }\r\n      pagDots = <span className={this.state.currentPage >= this.state.pages - 3 ? \"pagDots hidden\" : \"pagDots\"}>...</span>;\r\n      buttons.push(pagDots);\r\n\r\n      pagButton = <button className={(this.state.pages - 1 === this.state.currentPage ? \"pagButton current\" : \"pagButton\")} value={this.state.pages - 1} id={\"pagButton-\" + this.state.pages - 1} key={this.state.pages - 1} onClick={this.handleClick}>{this.state.pages - 1}</button>\r\n      buttons.push(pagButton);\r\n      pagButton = <button className={(this.state.pages === this.state.currentPage ? \"pagButton current\" : \"pagButton\")} value={this.state.pages} id={\"pagButton-\" + this.state.pages} key={this.state.pages} onClick={this.handleClick}>{this.state.pages}</button>\r\n      buttons.push(pagButton);\r\n    }\r\n\r\n    const next = <button className=\"pagButton next\" disabled={this.state.currentPage === this.state.pages ? true : false} value=\"next\" key=\"next\" id=\"pagButton-next\" onClick={this.handleClick}>Next</button>\r\n    buttons.push(next);\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const val = (e.currentTarget.value + '').toLowerCase();\r\n\r\n    let records = this.editUsers();\r\n    if (this.state.lastSearch && val.startsWith(this.state.lastSearch) && val.length > this.state.lastSearch.length) {\r\n      records = this.state.allUsers;\r\n    }\r\n    \r\n    if (val && val !== ' ') {\r\n      const result = records.filter(obj => {\r\n        const keys = Object.keys(obj);\r\n        for (const key of keys) {\r\n          let str = (obj[key] + '').toLowerCase();\r\n          if (str.indexOf(val) !== -1) {\r\n            return true;\r\n          }\r\n        }\r\n        return false; \r\n      });\r\n      \r\n      this.setState({\r\n        allUsers: result,\r\n        lastSearch: val,\r\n      });\r\n    }\r\n    this.updateRecordsToShow(this.state.currentPage);\r\n  }\r\n\r\n  render() {\r\n    const filledRaws = this.state.recordsToShow.map((info) => {\r\n      return (\r\n        <tr className=\"row regRow\" key={info.index}>\r\n          <td className=\"tableCell regCell indexCell\">{info.index}</td>\r\n          <td className=\"tableCell regCell nameCell\">{info.fullName}</td>\r\n          <td className=\"tableCell regCell genderCell\">{info.gender}</td>\r\n          <td className=\"tableCell regCell ageCell\">{info.age}</td>\r\n          <td className=\"tableCell regCell emailCell\">{info.email}</td>\r\n          <td className=\"tableCell regCell cityCell\">{info.city}</td>\r\n          <td className=\"tableCell regCell countryCell\">{info.country}</td>\r\n        </tr>\r\n      )\r\n    });\r\n    const pagination = this.createPagination();\r\n  \r\n    return (\r\n      <div className=\"tableContainer\">\r\n        <table>\r\n          <thead>\r\n            <tr className=\"row headRow\">\r\n              <th className={this.state.sorted.sortName === \"index\" ? (this.state.sorted.order === \"asc\" ? \"tableCell headCell indexCell asc\" : \"tableCell headCell indexCell desc\") : \"tableCell headCell indexCell\"} id=\"index\" onClick={this.handleSortClick}>№</th>\r\n              <th className={this.state.sorted.sortName === \"fullName\" ? (this.state.sorted.order === \"asc\" ? \"tableCell headCell nameCell asc\" : \"tableCell headCell nameCell desc\") : \"tableCell headCell nameCell\"} id=\"fullName\" onClick={this.handleSortClick}>Name</th>\r\n              <th className={this.state.sorted.sortName === \"gender\" ? (this.state.sorted.order === \"asc\" ? \"tableCell headCell genderCell asc\" : \"tableCell headCell genderCell desc\") : \"tableCell headCell genderCell\"} id=\"gender\" onClick={this.handleSortClick}>Gender</th>\r\n              <th className={this.state.sorted.sortName === \"age\" ? (this.state.sorted.order === \"asc\" ? \"tableCell headCell ageCell asc\" : \"tableCell headCell ageCell desc\") : \"tableCell headCell ageCell\"} id=\"age\" onClick={this.handleSortClick}>Age</th>\r\n              <th className={this.state.sorted.sortName === \"email\" ? (this.state.sorted.order === \"asc\" ? \"tableCell headCell emailCell asc\" : \"tableCell headCell emailCell desc\") : \"tableCell headCell emailCell\"} id=\"email\" onClick={this.handleSortClick}>Email</th>\r\n              <th className={this.state.sorted.sortName === \"city\" ? (this.state.sorted.order === \"asc\" ? \"tableCell headCell cityCell asc\" : \"tableCell headCell cityCell desc\") : \"tableCell headCell cityCell\"} id=\"city\" onClick={this.handleSortClick}>City</th>\r\n              <th className={this.state.sorted.sortName === \"country\" ? (this.state.sorted.order === \"asc\" ? \"tableCell headCell countryCell asc\" : \"tableCell headCell countryCell desc\") : \"tableCell headCell countryCell\"} id=\"country\" onClick={this.handleSortClick}>Country</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"tableBody\">\r\n            {filledRaws}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <div className=\"filterContainer\">\r\n                <label for=\"filter\">Find:</label>\r\n                <input type=\"text\" className=\"filerInput\" id=\"filter\" onChange={this.handleChange}></input>\r\n              </div>\r\n              {pagination}\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Table from './Table';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Table pageSize=\"50\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}